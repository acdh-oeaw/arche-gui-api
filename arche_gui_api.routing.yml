arche_api_gnd_persons:    
    path: '/api/gnd'
    defaults:
        _controller: '\Drupal\arche_gui_api\Controller\ArcheApiMainController::api_gnd_persons'
    requirements:
        _access: 'TRUE'
        
arche_api_get_inversedata:    
    path: '/api/v2/getInverseData/{repoid}'
    defaults:
        _controller: '\Drupal\arche_gui_api\Controller\ArcheApiMainController::api_get_inversedata'
    requirements:
        _access: 'TRUE'        

arche_api_get_members:    
    path: '/api/v2/getMembers/{repoid}'
    defaults:
        _controller: '\Drupal\arche_gui_api\Controller\ArcheApiMainController::api_get_members'
    requirements:
        _access: 'TRUE'    
        
arche_api_get_rpr:    
    path: '/api/v2/getRPR/{repoid}/{lng}'
    defaults:
        _controller: '\Drupal\arche_gui_api\Controller\ArcheApiMainController::api_get_rpr'
    requirements:
        _access: 'TRUE'          
        
arche_api_get_ontology_jsplugin_data:    
    path: '/api/getOntologyJSPluginData/{lng}'
    defaults:
        _controller: '\Drupal\arche_gui_api\Controller\ArcheApiMainController::api_get_ontology_jsplugin'
    requirements:
        _access: 'TRUE'
        
arche_api_get_collection_data_lazy:    
    path: '/api/v2/get_collection_data_lazy/{repoid}/{lng}'
    defaults:
        _controller: '\Drupal\arche_gui_api\Controller\ArcheApiMainController::api_collection_data_lazy'
    requirements:
        uri: '^[^\?]*$'
        _permission: 'access content'
        _access: 'TRUE'
        
arche_api_dl_collection_binaries:
    path: '/api/v2/dl_collection_binaries/{repoid}'
    defaults:
        _controller: '\Drupal\arche_gui_api\Controller\ArcheApiMainController::api_dl_collection_binaries'
    requirements:
        uri: '^[^\?]*$'
        _permission: 'access content'
        _access: 'TRUE'        
        
arche_api_collection_dl_script:
    path: '/api/v2/collection_dl_script/{repoid}'
    defaults:
        _controller: '\Drupal\arche_gui_api\Controller\ArcheApiMainController::api_collection_dl_script'
    requirements:
        uri: '^[^\?]*$'
        _permission: 'access content'
        _access: 'TRUE'       
        
    
        